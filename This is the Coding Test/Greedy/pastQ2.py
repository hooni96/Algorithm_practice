'''
기출 02. 곱하기 혹은 더하기
각 자리가 숫자(0~9)로만 이루어진 문자열 s가 주어졌을 때,
왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에
'x' 혹은 '+'연산자를 넣어 결과적으로 만들어질 수 있는
가장 큰 수를 구하는 프로그램을 작성하세요.
(모든 연산은 왼쪽에서 순서대로 이루어진다.)

당연히 큰 수를 만들려면 'x' 연산자가 압도적으로 유일하다.
단 둘 중 어느 한 숫자가 0또는 1이라면 더하기가 더 효율적이다.
이를 엄두해 두고 코드를 작성했다.
'''

# 내가 푼 코드
n = input()
arr = [i for i in n] # 숫자로 이루어진 문자열을 리스트에 넣는다.
result = 0 # 결과값은 0으로 초기화

for i in range(len(n)): # 문자열 길이만큼 비교 맨 처음은 result랑 비교!
  if (int(arr[i]) <= 1) | (result == 0):
   # i번째 원소가 1보다 작거나 같거나 result가 계속 초기화 값인 경우는
    result += int(arr[i]) # 더하기 해준다!
  else: # 그 경우가 아니면 곱해기 해준다.
    result *= int(arr[i])

print(result)

'''
내가 작성한 코드는 맨 왼쪽부터 같이 연산 안하고 따로 초기값 만들어서
그 값이랑 비교한 것 부터가 오류가 생겼을 것 같다. 답은 나오지만
정확한 코드작성은 아닌 것 같다. 해설지 답은 그 점을 잘 표현했다.
# A02
data = input()
# 첫 번째 문자를 숫자로 변경하여 대입
result = int(data[0])

for i in range(1, len(data)): # 두번째 원소부터 마지막 원소까지 볼 수 있지
  num = int(data[i])
  if num <= 1 or result <= 1:
  # 비교하려는 두 수 중에서 하나라도 '0' 혹인 '1'인 경우, 곱하기보다는 더하기 수행
    result += num
  else:
  # 그게 아니고 둘 다 2 이상인 경우는 곱하기 수행
    result *= num

print(result)
'''