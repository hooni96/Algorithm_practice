'''
★예제 4-3 왕실의 나이트★
앞서 푼 상하좌우 문제와 비슷하다.
나이트의 이동 경로를 steps라는 리스에 넣는다.
상하좌우 문제는 dx, dy에 넣었다.
이렇게 이동할 방향을 기록할 수 있도록 하는 기능은 위 두 가지로 구현된다.
이제 나이트의 위치가 주어지면 현재 위치에서 이동 경로를 더한 다음,
8x8 좌표 평면에 있는지 확인하면 된다.
이 문제를 더 어렵게 내려면입력 문자가 열과 행이 아닌 1a와 같은 행과 열 형태로
들어왔을 때의 예외 처리를 요구 할 수도 있다. 이런 다양한 구현 유형에 대비하기
위해서 파이썬 문법을 자유롭게 사용할 수 있도록 훈련하는 것이 중요하다.
이 문제도 꼭 다시 풀어 봐야할듯!!!!
'''
# 4-3
input_data = input() # 현재 나이트의 위치 입력받기
row = int(input_data[1]) # 숫자 데이터가 행이니깐 여기에 넣고
column = int(ord(input_data[0])) - int(ord('a')) + 1
# 문자 데이터는 행인데 이걸 인덱스로 몇 번째인지로 넣고 싶어서
# ord함수 이용해 아스키 코드로 바꾸고 항상 a를 빼주고 1을 더해서 a부터 1로 세지게 해준다.

steps = [(-2, -1), (-1, -2), (1, -2), (2, -1), (2, 1), (1, 2), (-1, 2), (-2, 1)]
# L자로 수평 2칸 뒤 수직 1칸 혹은 수직 2칸 뒤 수평 1칸으로 이동가능 한 경우 총 8가지
result = 0 # 몇 가지 방향 이동 가능한 횟수 담을 변수

for step in steps: # 8가지 방향에 대하여 각 위치로 이동가능 한지 확인
  # 이동하고자 하는 위치 확인
  next_row = row + step[0]
  next_column = column + step[1]
  # 해당 위치로 이동이 가능하다면(이동 후에도 체스판 안에 있다면~) 카운트 증가
  if next_row >= 1 and next_row <= 8 and next_column >= 1 and next_column <= 8:
    result += 1

print(result)